{
	"info": {
		"_postman_id": "5af5aed8-5255-4e26-a517-6704fb490de7",
		"name": "HL7",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "177674"
	},
	"item": [
		{
			"name": "Get data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Parse data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "clientId",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "clientSecret",
							"value": "{{client_secret}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlhSdmtvOFA3QTNVYVdTblU3Yk05blQwTWpoQSJ9.eyJhdWQiOiI5Njc3MTdlYS0xNTVlLTRmYWUtYTU1Mi0xOTMwOTUxNzI5NTciLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vMjUxOGRmYTQtYWNhNy00ZDEzLTkwOTQtNThmZjgxNDlkZjNkL3YyLjAiLCJpYXQiOjE3MTEyOTg0NDcsIm5iZiI6MTcxMTI5ODQ0NywiZXhwIjoxNzExMzA0MDM4LCJhaW8iOiJBWVFBZS84V0FBQUF0Q2xyMGtPYXVWSjFzN1FxeDU0TTBHRERreG5mby96N2dpdXhlTlovQWg3TGI5dkdkeitrVnErNmk5cEFiclY4V05YUkxtTU9NQ2V0bEN2SXUvY2U3YVZyZ1lFcXIrUVF2dm1NQXQ1R0xEc1YyaGVES1kzdEtYa1pDeFNsV1RwMjEzQ2VBbnNlUUdPV1ZKWTJFTWh3SlpjbG5ydnF5YTY1NDZtRzdCOXJ0dW89IiwiYXpwIjoiOTY3NzE3ZWEtMTU1ZS00ZmFlLWE1NTItMTkzMDk1MTcyOTU3IiwiYXpwYWNyIjoiMSIsImlkcCI6ImxpdmUuY29tIiwibmFtZSI6IkJpbGwgTmFnZWwiLCJvaWQiOiJiMzU2YzU4Ni02MDFjLTQ4YzYtOWJkZi0wYWE2MGJhZTk5MGQiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJuYWdlbC53aWxsaWFtQGdtYWlsLmNvbSIsInJoIjoiMC5BVzhBcE44WUphZXNFMDJRbEZqX2dVbmZQZW9YZDVaZUZhNVBwVklaTUpVWEtWZHZBS1kuIiwic2NwIjoiYWNjZXNzX2FzX3VzZXIiLCJzdWIiOiJ0aEFuRzZ2VzZXdUJkUkdZSC1yeEhLakIzYU9TNWJiYU5uMklELXY5SDU4IiwidGlkIjoiMjUxOGRmYTQtYWNhNy00ZDEzLTkwOTQtNThmZjgxNDlkZjNkIiwidXRpIjoiMUZZb2JVT3AyVU8zdUZzZVR2ak9BQSIsInZlciI6IjIuMCJ9.te5mcMxsYB_2EaJpBvokmQoR7ZVrDPrynR9octWaF-V8k5Ic4Wg4m2U3beNqYcMSEkwGp7MuCauZSU6QDCWzLm5nc2yQ9CvUjLDK0hJYVCZHGpeR3tRLYPoZU7F2B7DdN38OlPA0Fbgw935HwkeTSeARnTtR8bkx2uAR55T0o9jIUoKEFJEZNfn6-6MfJvJboUNcDu13sBnRB3tMEv-xwKQW5KrxDZcPo62uGCZP7WSoFuzh-_bBOERDwbCnkFTiebw_dQZOHSqSlVC2EVRcNlFy49o5UXyKP68S8BSjdQDSxw7-4Y3gCQIfagJOl2TT-_o6N8G4W1bMT0VHYaeBGg",
							"type": "string"
						},
						{
							"key": "scope",
							"value": "api://967717ea-155e-4fae-a552-193095172957/access_as_user",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "https://login.microsoftonline.com/2518dfa4-aca7-4d13-9094-58ff8149df3d/oauth2/v2.0/token",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://login.microsoftonline.com/2518dfa4-aca7-4d13-9094-58ff8149df3d/oauth2/v2.0/authorize",
							"type": "string"
						},
						{
							"key": "state",
							"value": "12345",
							"type": "string"
						},
						{
							"key": "redirect_uri",
							"value": "https://localhost:7285/signin-oidc",
							"type": "string"
						},
						{
							"key": "useBrowser",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "tokenName",
							"value": "HenrySchein",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\"Patient Name\",\"SSN\",\"Age\",\"Phone Number\",\"Status\"\n\"Prescott, Zeke\",\"542-51-6641\",21,\"801-555-2134\",\"Opratory=2,PCP=1\"\n\"Goldstein, Bucky\",\"635-45-1254\",42,\"435-555-1541\",\"Opratory=1,PCP=1\"\n\"Vox, Bono\",\"414-45-1475\",51,\"801-555-2100\",\"Opratory=3,PCP=2\"",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7285/api/v1/HL7/Parse?Delimiter=Comma&TextQualifier=DoubleQuotes&DataFormat=BraceDelimited",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7285",
					"path": [
						"api",
						"v1",
						"HL7",
						"Parse"
					],
					"query": [
						{
							"key": "Delimiter",
							"value": "Comma"
						},
						{
							"key": "TextQualifier",
							"value": "DoubleQuotes"
						},
						{
							"key": "DataFormat",
							"value": "BraceDelimited"
						},
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBearerToken",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "967717ea-155e-4fae-a552-193095172957",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "https://graph.microsoft.com/.default",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "_CX8Q~FL4slSW6RLMpReDYWG0OEE8EuusxVfTc.p",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://login.microsoftonline.com/2518dfa4-aca7-4d13-9094-58ff8149df3d/oauth2/v2.0/token",
					"protocol": "https",
					"host": [
						"login",
						"microsoftonline",
						"com"
					],
					"path": [
						"2518dfa4-aca7-4d13-9094-58ff8149df3d",
						"oauth2",
						"v2.0",
						"token"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		},
		{
			"key": "client_secret",
			"value": "G0K8Q~3tyN.~nyKPXoXEK0FzexwDw-OsJiLgGb-l"
		},
		{
			"key": "client_id",
			"value": "967717ea-155e-4fae-a552-193095172957"
		}
	]
}